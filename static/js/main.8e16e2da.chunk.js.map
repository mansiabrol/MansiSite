{"version":3,"sources":["logo.svg","components/Header.js","components/Banner.js","components/Category.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","class","href","src","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","Banner","Category","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qKAAAA,EAAOC,QAAU,IAA0B,kC,0ICoC5BC,E,uKAjCf,OACA,yBAAKC,MAAM,mBACV,yBAAKA,MAAM,wCACV,uBAAGA,MAAM,eAAeC,KAAK,KAC3B,yBAAKC,IAAI,kBAAkBC,IAAI,MAGjC,4BAAQH,MAAM,iBAAiBI,KAAK,SAASC,cAAY,WAAWC,cAAY,uBAAuBC,gBAAc,sBAAsBC,gBAAc,QAAQC,aAAW,qBAC1K,0BAAMT,MAAM,yBAEhB,yBAAKA,MAAM,2BAA2BU,GAAG,uBACrC,wBAAIV,MAAM,mCACR,wBAAIA,MAAM,mBACR,uBAAGA,MAAM,WAAWC,KAAK,KAAzB,YAAsC,0BAAMD,MAAM,WAAZ,eAExC,wBAAIA,MAAM,YACR,uBAAGA,MAAM,WAAWC,KAAK,KAAzB,iBAEF,wBAAID,MAAM,YACR,uBAAGA,MAAM,WAAWC,KAAK,KAAzB,YAEJ,wBAAID,MAAM,YACN,uBAAGA,MAAM,oBAAoBC,KAAK,KAAlC,kB,GAxBaU,aCiBFC,MAjBlB,WAEO,OACR,6BAASZ,MAAM,UACf,yBAAKA,MAAM,mBACV,yBAAKA,MAAM,OACX,yBAAKA,MAAM,aACX,0DAA+B,kDAC/B,gEAAqC,6BAArC,iCACA,mEACA,uBAAGC,KAAK,IAAID,MAAM,eAAlB,eAA4C,8BAAM,yBAAKE,IAAI,yBAAyBC,IAAI,YCkB1EU,E,uKA1Bf,OACA,6BAASb,MAAM,YACd,yBAAKA,MAAM,mBACX,yBAAKA,MAAM,OACX,yBAAKA,MAAM,aACX,yBAAKA,MAAM,aACX,4BAAI,oCAAJ,0BACA,wBAAIA,MAAM,WACV,4BAAI,uBAAGC,KAAK,KAAI,0BAAMD,MAAM,OAAxB,iBACJ,4BAAI,uBAAGC,KAAK,KAAI,0BAAMD,MAAM,OAAxB,qBACJ,4BAAI,uBAAGC,KAAK,KAAI,0BAAMD,MAAM,OAAxB,iBACJ,4BAAI,uBAAGC,KAAK,KAAI,0BAAMD,MAAM,OAAxB,gBACJ,4BAAI,uBAAGC,KAAK,KAAI,0BAAMD,MAAM,OAAxB,eACJ,4BAAI,uBAAGC,KAAK,KAAI,0BAAMD,MAAM,OAAxB,sBACJ,4BAAI,uBAAGC,KAAK,KAAI,0BAAMD,MAAM,OAAxB,yB,GAhBkBW,aCeRG,MAVf,WACE,OACE,6BACC,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCCeC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.8e16e2da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React,{Component} from 'react'\r\nclass Header extends Component{\r\n    render(){\r\nreturn (\r\n<div class=\"container-fluid\">\r\n\t<nav class=\"navbar navbar-expand-lg navbar-light\">\r\n  <a class=\"navbar-brand\" href=\"#\">\r\n    <img src=\"images/logo.png\" alt=\"\"/>\r\n\r\n    </a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo02\" aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n<div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\r\n    <ul class=\"navbar-nav ml-auto mt-2 mt-lg-0\">\r\n      <li class=\"nav-item active\">\r\n        <a class=\"nav-link\" href=\"#\">About us <span class=\"sr-only\">(current)</span></a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"#\">How It Works</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"#\">Pricing</a>\r\n      </li>\r\n\t   <li class=\"nav-item\">\r\n        <a class=\"nav-link loginBtn\" href=\"#\">LOGIN</a>\r\n      </li>\r\n    </ul>\r\n    </div>\r\n\t</nav>\r\n\t</div>\r\n )   \r\n}\r\n\r\n\r\n}\r\nexport default Header","import React,{Component} from 'react'\r\n function Banner(){\r\n\r\n        return (\r\n<section class=\"banner\" >\r\n<div class=\"container-fluid\">\r\n\t<div class=\"row\">\r\n\t<div class=\"col-md-12\">\r\n\t<h1>Buying a right property to <span>Live or Invest?</span></h1>\r\n\t<h2>Let's help you search and secure <br/> a deal with just few clicks.</h2>\r\n\t<p>Helping people make smart decisions!</p>\r\n\t<a href=\"#\" class=\"btn-lg-pink\">Get Started <span><img src=\"images/get-started.png\" alt=\"\"/></span></a>\r\n\t</div>\r\n\t</div>\r\n\t</div>\r\n</section>\r\n        )\r\n }\r\n    export default Banner","import React,{Component} from 'react'\r\nclass Category extends Component{\r\n    render(){\r\nreturn (\r\n<section class=\"category\">\r\n\t<div class=\"container-fluid\">\r\n\t<div class=\"row\">\r\n\t<div class=\"col-md-12\">\r\n\t<div class=\"cat_inner\">\r\n\t<h2><span>Or</span> Browse The Highlights</h2>\r\n\t<ul class=\"cat_box\">\r\n\t<li><a href=\"#\"><span class=\"hg\"></span> High Growth</a></li>\r\n\t<li><a href=\"#\"><span class=\"pg\"></span> Positive Geared</a></li>\r\n\t<li><a href=\"#\"><span class=\"uv\"></span> Under Value</a></li>\r\n\t<li><a href=\"#\"><span class=\"ts\"></span> Top School</a></li>\r\n\t<li><a href=\"#\"><span class=\"tr\"></span> Transport</a></li>\r\n\t<li><a href=\"#\"><span class=\"sg\"></span> Subdivide/Granny</a></li>\r\n\t<li><a href=\"#\"><span class=\"cl\"></span> City Life</a></li>\r\n\t</ul>\r\n</div>\r\n\t</div>\r\n\t</div>\r\n\t</div>\r\n\t</section>\r\n )   \r\n}\r\n\r\n\r\n}\r\nexport default Category","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header'\nimport Banner from './components/Banner'\nimport Category from './components/Category'\nfunction App() {\n  return (\n    <div>\n     <Header/> \n     <Banner/>\n     <Category/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}